syntax = "proto3";
 
package engine;
 
service Engine{
 rpc DesktopStart(DesktopStartRequest) returns (DesktopStartResponse) {}
 rpc DesktopStop(DesktopStopRequest) returns (DesktopStopResponse) {}
 rpc DesktopDelete(DesktopDeleteRequest) returns (DesktopDeleteResponse) {}
 rpc DesktopFromTemplate(DesktopFromTemplateRequest) returns (DesktopFromTemplateResponse) {}
 rpc DesktopFromMedia(DesktopFromMediaRequest) returns (DesktopFromMediaResponse) {}
 rpc DesktopUpdate(DesktopUpdateRequest) returns (DesktopUpdateResponse) {}
 
 rpc TemplateDelete(TemplateDeleteRequest) returns (TemplateDeleteResponse) {}
 rpc TemplateUpdate(TemplateUpdateRequest) returns (TemplateUpdateResponse) {}
 rpc TemplateFromDomain(TemplateFromDomainRequest) returns (TemplateFromDomainResponse) {}
}

message DesktopStartRequest{
 string domain_id=1;
}

message DesktopStartResponse{
    enum State{
     STARTED = 0;
     STOPPED = 1;
     FAILED = 2;
     UNKNOWN = 3;
     PAUSED = 4;
    }
 State state = 1;
 string detail = 2;
 Viewer viewer = 3;
}



message DesktopStopRequest{
 string domain_id=1;
}

message DesktopStopResponse{
    enum State{
     STARTED = 0;
     STOPPED = 1;
     FAILED = 2;
     UNKNOWN = 3;
    }
 State state = 1;
 string detail = 2;
}

message DesktopDeleteRequest{
 string domain_id=1;
}

message DesktopDeleteResponse{
    enum State{
     DELETED = 0;
     FAILED = 1;
     UNKNOWN = 2;
    }
 State state = 1;
 string detail = 2;
}


message DesktopFromTemplateRequest{
    message Hardware{
     int32 vcpus=1;
     int32 memory=2;
     string boot_disk_rpath=11;
     string boot_diskbus=7; 
     repeated string videos=3;
     repeated string graphics=4;
     repeated string boots=5;
     repeated string interfaces=6;
     repeated string isos=8;
     repeated string floppies=9;
    }
 string domain_id=1;
 string template_id=2;
 Hardware hardware=3;
}

message DesktopFromTemplateResponse{
    enum State{
     STOPPED= 0;
     FAILED = 1;
     UNKNOWN = 2;
    }
 State state = 1;
 string detail = 2;
}

message DesktopFromMediaRequest{
    message Hardware{
     int32 vcpus=1;
     int32 memory=2;
     int32  boot_disk_size=10;     
     string boot_disk_rpath=11;
     string boot_diskbus=7; 
     repeated string videos=3;
     repeated string graphics=4;
     repeated string boots=5;
     repeated string interfaces=6;
     repeated string isos=8;
     repeated string floppies=9;
    }
 string domain_id=1;
 string virt_install_id=2;
 Hardware hardware=3;
}

message DesktopFromMediaResponse{
    enum State{
     STOPPED= 0;
     FAILED = 1;
     UNKNOWN = 2;
    }
 State state = 1;
 string detail = 2;
}

message DesktopUpdateRequest{
    message Hardware{
     int32 vcpus=1;
     int32 memory=2;
     string boot_diskbus=7; 
     repeated string videos=3;
     repeated string graphics=4;
     repeated string boots=5;
     repeated string interfaces=6;
     repeated string isos=8;
     repeated string floppies=9;
    }
 string domain_id=1;
 Hardware hardware=2;
}

message DesktopUpdateResponse{
    enum State{
     STOPPED= 0;
     FAILED = 1;
     UNKNOWN = 2;
    }
 State state = 1;
 string detail = 2;
}

message Viewer{
    string host=1;
    string graphics=2;
    int32  port=3;
    int32  tlsport=4;
    string passwd=5;
}



message TemplateDeleteRequest{
 string template_id=1;
}

message TemplateDeleteResponse{
    enum State{
     DELETED = 0;
     FAILED = 1;
     UNKNOWN = 2;
    }
 State state = 1;
 string detail = 2;
}

message TemplateUpdateRequest{
    message Hardware{
     int32 vcpus=1;
     int32 memory=2;
     string boot_diskbus=7; 
     repeated string videos=3;
     repeated string graphics=4;
     repeated string boots=5;
     repeated string interfaces=6;
     repeated string isos=8;
     repeated string floppies=9;
    }
 string template_id=1;
 Hardware hardware=2;
}

message TemplateUpdateResponse{
    enum State{
     STOPPED= 0;
     FAILED = 1;
     UNKNOWN = 2;
    }
 State state = 1;
 string detail = 2;
}


message TemplateFromDomainRequest{
    message Hardware{
     int32 vcpus=1;
     int32 memory=2;
     string boot_diskbus=7; 
     repeated string videos=3;
     repeated string graphics=4;
     repeated string boots=5;
     repeated string interfaces=6;
     repeated string isos=8;
     repeated string floppies=9;
    }
 string domain_id=1;
 string template_id=2;
     enum Kind{
        TEMPLATE = 0;
        BASE = 1;
     }
 Kind kind=3;
 Hardware hardware=4;
}

message TemplateFromDomainResponse{
    enum State{
     STOPPED= 0;
     FAILED = 1;
     UNKNOWN = 2;
    }
 State state = 1;
 string detail = 2;
}


