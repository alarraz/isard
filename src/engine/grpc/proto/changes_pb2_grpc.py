# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from engine.grpc.proto import changes_pb2 as engine_dot_grpc_dot_proto_dot_changes__pb2


class ChangesStub(object):
  """import "google/protobuf/empty.proto"; 
  import "google/protobuf/any.proto";

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DomainChanges = channel.unary_unary(
        '/changes.Changes/DomainChanges',
        request_serializer=engine_dot_grpc_dot_proto_dot_changes__pb2.DomainChangesRequest.SerializeToString,
        response_deserializer=engine_dot_grpc_dot_proto_dot_changes__pb2.DomainChangesResponse.FromString,
        )


class ChangesServicer(object):
  """import "google/protobuf/empty.proto"; 
  import "google/protobuf/any.proto";

  """

  def DomainChanges(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ChangesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DomainChanges': grpc.unary_unary_rpc_method_handler(
          servicer.DomainChanges,
          request_deserializer=engine_dot_grpc_dot_proto_dot_changes__pb2.DomainChangesRequest.FromString,
          response_serializer=engine_dot_grpc_dot_proto_dot_changes__pb2.DomainChangesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'changes.Changes', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
