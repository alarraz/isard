# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import engine_pb2 as engine__pb2


class EngineStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DomainStart = channel.unary_unary(
        '/engine.Engine/DomainStart',
        request_serializer=engine__pb2.Domain.SerializeToString,
        response_deserializer=engine__pb2.actionResult.FromString,
        )
    self.DomainStop = channel.unary_unary(
        '/engine.Engine/DomainStop',
        request_serializer=engine__pb2.Domain.SerializeToString,
        response_deserializer=engine__pb2.actionResult.FromString,
        )
    self.DomainDelete = channel.unary_unary(
        '/engine.Engine/DomainDelete',
        request_serializer=engine__pb2.Domain.SerializeToString,
        response_deserializer=engine__pb2.actionResult.FromString,
        )
    self.DomainCreateFromTemplate = channel.unary_unary(
        '/engine.Engine/DomainCreateFromTemplate',
        request_serializer=engine__pb2.Domain.SerializeToString,
        response_deserializer=engine__pb2.actionResult.FromString,
        )
    self.TemplateCreateFromDomain = channel.unary_unary(
        '/engine.Engine/TemplateCreateFromDomain',
        request_serializer=engine__pb2.Domain.SerializeToString,
        response_deserializer=engine__pb2.actionResult.FromString,
        )


class EngineServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DomainStart(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DomainStop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DomainDelete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DomainCreateFromTemplate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TemplateCreateFromDomain(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EngineServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DomainStart': grpc.unary_unary_rpc_method_handler(
          servicer.DomainStart,
          request_deserializer=engine__pb2.Domain.FromString,
          response_serializer=engine__pb2.actionResult.SerializeToString,
      ),
      'DomainStop': grpc.unary_unary_rpc_method_handler(
          servicer.DomainStop,
          request_deserializer=engine__pb2.Domain.FromString,
          response_serializer=engine__pb2.actionResult.SerializeToString,
      ),
      'DomainDelete': grpc.unary_unary_rpc_method_handler(
          servicer.DomainDelete,
          request_deserializer=engine__pb2.Domain.FromString,
          response_serializer=engine__pb2.actionResult.SerializeToString,
      ),
      'DomainCreateFromTemplate': grpc.unary_unary_rpc_method_handler(
          servicer.DomainCreateFromTemplate,
          request_deserializer=engine__pb2.Domain.FromString,
          response_serializer=engine__pb2.actionResult.SerializeToString,
      ),
      'TemplateCreateFromDomain': grpc.unary_unary_rpc_method_handler(
          servicer.TemplateCreateFromDomain,
          request_deserializer=engine__pb2.Domain.FromString,
          response_serializer=engine__pb2.actionResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'engine.Engine', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
